/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/benz.glb 
*/
import React, { useRef, useEffect } from 'react'
import { useGLTF } from '@react-three/drei'
import { useCustomization } from '../contexts/Customization'

const CarModel = (props) => {
  const { nodes } = useGLTF('../assets/3d/benz.glb')
  const carPos = useRef()
  const carBody = useRef()
  const wheelPos = useRef()
  const wheelBrakePos = useRef()
  const { carColor } = useCustomization();

  useEffect(() => {
    if (carPos.current) {
        carPos.current.position.set(0, 0, 0);
    }
}, []);

  useEffect(() => {
    if (carBody.current) {
      carBody.current.traverse((child) => {
        if (child.isMesh && child.material && child.material.name === 'carpaint_metalic_white') {
          child.material.color.set(carColor.color);
        }
      });
    }
  }, [carColor])

  return (
    <group {...props} dispose={null} ref={carPos} >
      
    </group>
  )
}
export default CarModel
useGLTF.preload('./models/benz.glb')
